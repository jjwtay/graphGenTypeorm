scalar any

directive @Column(
    
    # Indicates if this column is a primary column.
    primary: Boolean

    # Indicates if this column is of type ObjectID
    objectId: Boolean

    # Indicates if this column is a created date column.
    createDate: Boolean

    # Indicates if this column is an update date column.
    updateDate: Boolean

    # Indicates if this column is a version column.
    version: Boolean

    # Indicates if this column is a treeChildrenCount column.
    treeChildrenCount: Boolean

    # Indicates if this column is a treeLevel column.
    treeLevel: Boolean

    # Column type. Must be one of the value from the ColumnTypes class.
    type: String

    # Column name in the database.
    name: String

    # Column type's length. For example type = "string" and length = 100 means that ORM will create a column with
    # type varchar(100).
    length: Int

    # Column type's display width. Used only on some column types in MySQL.
    # For example, INT(4) specifies an INT with a display width of four digits.
    width: Int

    # Indicates if column's value can be set to NULL.
    nullable: Boolean
    
    # Indicates if column value is updated by "save" operation.
    # If false you'll be able to write this value only when you first time insert the object.
    # Default value is "true".
    update: Boolean

    # Indicates if column is always selected by QueryBuilder and find operations.
    # Default value is "true".
    select: Boolean

    # Indicates if column is inserted by default.
    # Default value is "true".
    insert: Boolean

    # Specifies if this column will use AUTO_INCREMENT or not (e.g. generated number).
    generated: Boolean

    # Specifies if column's value must be unique or not.
    unique: Boolean
    
    # Extra column definition. Should be used only in emergency situations. Note that if you'll use this property
    # auto schema generation will not work properly anymore. Avoid using it.
    columnDefinition: String

    # Column comment.
    comment: String

    # Default database value.
    default: any


    # The precision for a decimal (exact numeric) column (applies only for decimal column), which is the maximum
    # number of digits that are stored for the values.
    precision: Int

    # The scale for a decimal (exact numeric) column (applies only for decimal column), which represents the number
    # of digits to the right of the decimal point and must not be greater than precision.
    scale: Int

    # Puts ZEROFILL attribute on to numeric column. Works only for MySQL.
    # If you specify ZEROFILL for a numeric column, MySQL automatically adds the UNSIGNED attribute to the column
    zerofill: Boolean

    # Puts UNSIGNED attribute on to numeric column. Works only for MySQL.
    unsigned: Boolean

    # Defines a column character set.
    # Not supported by all database types.
    charset: String

    # Defines a column collation.
    collation: String

    # Array of possible enumerated values.
    enum: any

    # Generated column expression. Supports only in MySQL.
    asExpression: String

    # Generated column type. Supports only in MySQL.
    generatedType: String

    # Return type of HSTORE column.
    # Returns value as string or as object.
    hstoreType: String

    # Indicates if this column is an array.
    # Can be simply set to true or array length can be specified.
    # Supported only by postgres.
    array: Boolean

) on FIELD_DEFINITION

directive @JoinColumn on FIELD_DEFINITION

directive @PrimaryGeneratedColumn on FIELD_DEFINITION

directive @PrimaryColumn on FIELD_DEFINITION

directive @CreateDateColumn on FIELD_DEFINITION

directive @UpdateDateColumn on FIELD_DEFINITION