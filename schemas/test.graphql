# import Entity, PrimaryGeneratedColumn, ManyToMany, ManyToOne, OneToMany, EntityEnum, Column from '../src/typeorm.graphql'

type Author @Entity {
    id: Int! @PrimaryGeneratedColumn
    first: String! @Column(type: "varchar")
    last: String! @Column(type: "varchar")
    books: [Book] @ManyToMany(inverseSide: "authors") @JoinColumn
}

enum BookType @EntityEnum {
    Fiction,
    NonFiction
}

type Book @Entity(
    uniques: [{
        name: "title_publisher",
        columns: ["title", "publisher"]
    }] 
) {
    id: Int! @PrimaryGeneratedColumn
    title: String! @Column(type: "varchar")
    authors: [Author] @ManyToMany(inverseSide: "books")
    publisher: Publisher @ManyToOne(inverseSide: "books")
    description: String @Column(type: "varchar")
    type: BookType @Column(type: "varchar")
}

type Publisher @Entity {
    id: Int! @PrimaryGeneratedColumn
    name: String! @Column(type: "varchar")
    books: [Book] @OneToMany(inverseSide: "publisher")
}

type Restaurant @Entity {
    id: Int! @PrimaryGeneratedColumn
    name: String! @Column
}

