# import Entity, PrimaryGeneratedColumn, ManyToMany, ManyToOne, OneToMany, EntityEnum, Column from '../src/typeorm.graphql'

type Author @Entity {
    id: Int! @PrimaryGeneratedColumn
    first: String! @Column(type: "varchar")
    last: String! @Column(type: "varchar")
    books: [Book] @ManyToMany(type: "type => Book", map: "book => book.authors") @JoinColumn
}

enum BookType @EntityEnum {
    Fiction,
    NonFiction
}

type Book @Entity {
    id: Int! @PrimaryGeneratedColumn
    title: String! @Column(type: "varchar")
    authors: [Author] @ManyToMany(type: "type => Author", map: "author => author.books")
    publisher: Publisher @ManyToOne(type: "type => Publisher", map: "publisher => publisher.books")
    description: String @Column(type: "varchar")
    type: BookType @Column(type: "varchar")
}

type Publisher @Entity {
    id: Int! @PrimaryGeneratedColumn
    name: String! @Column(type: "varchar")
    books: [Book] @OneToMany(type: "type => Book", map: "book => book.publisher")
}

type Restaurant @Entity {
    id: Int! @PrimaryGeneratedColumn
    name: String! @Column
}

